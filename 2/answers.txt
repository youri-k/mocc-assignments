### cpu benchmark ### (misst KFlOPS)

1. Wir erwarten, dass der Native Host am schnellsten durchläuft, gefolgt vom Docker-Container, da wir auf einem Linux Host System sind und dementsprechend der Linux Kernel direkt genutzt wird (ohne wirklichen Overhead).
Danach erwarten wir die Virtual Machine mit KVM, da bei der Hardware-unterstützte Virtualisierung die Anzahl der Eingriffe des Hypervisors um syscalls zu handeln entscheidend runtergeht. Am langsamsten läuft also die QEMU Instanz.

In der Qemu-VM messen wir eine viel kleinere Anzahl an FLOPS (um einen wesentlichen Faktor), was zu erwarten war.
Wir haben die höchsten Peaks tatsächlich auf dem Native Host gemessen, allerdings hat dieser über große Zeiträume ein bisschen weniger FLOPS als KVM und Docker, welche nah beieinander liegen. Dies sind aber höchst wahrscheinlich zu vernachlässigende Messfehler.

### memory benchmark ### (misst execution time)

1. Wir erwarten, dass der Native Host am schnellsten durchläuft, gefolgt vom Docker-Container, da wir auf einem Linux Host System sind und dementsprechend der Linux Kernel direkt genutzt wird (ohne wirklichen Overhead).
Danach erwarten wir die Virtual Machine mit KVM, da bei der Hardware-unterstützte Virtualisierung die Anzahl der Eingriffe des Hypervisors um syscalls zu handeln entscheidend runtergeht. Am langsamsten läuft also die QEMU Instanz.

Unsere Erwartungen haben sich bestätigt. Wir waren zudem sehr überrascht darüber, wie viel langsamer Qemu ist, wenn es ohne KVM ausgeführt wird. Hardware-Virtualisierung ist schon ein enorm großer Performance-Boost.

### disk benchmark ### (misst KiB/s)

1. Wir erwarten, dass der Native Host am schnellsten durchläuft, gefolgt vom Docker-Container, da wir auf einem Linux Host System sind und dementsprechend der Linux Kernel direkt genutzt wird (ohne wirklichen Overhead, außer um die Isolation sicherzustellen).
Danach erwarten wir die Virtual Machine mit KVM, da bei der Hardware-unterstützte Virtualisierung die Anzahl der Eingriffe des Hypervisors um syscalls zu handeln entscheidend runtergeht. Am langsamsten läuft also die QEMU Instanz.

Am besten hat anscheinend KVM performed, gefolgt von Qemu (Dies liegt möglichweise ann der Art und Weise, wie die Harddisk-Devices virtualisiert werden.)
Außerdem ist Docker ein wenig besser (mehr KiB/s) als der Native Host, welcher den letzten Platz belegt, was äußerst ungewöhnlich ist, aber damit zu erklären wäre, dass wir bei der Konfiguration der VM diese so eingestellt haben, dass die Festplatte nicht wirklich als solche (im klassischen Sinne) virtualisiert wird. Vielleicht liegt diese bei den VMs vollständig im RAM oder ähnliches...

2. Wir haben nicht explizit ein Disk Format angegeben, was bedeutet, dass Qemu per default raw für uns ausgewählt hat. 
https://unix.stackexchange.com/questions/276480/booting-a-raw-disk-image-in-qemu
Dies spielt sicherlich eine entscheidende Rolle bzgl. der Ergebnisse, die wir gesammelt haben, welche aber nicht unseren Erwartungen entsprechen.

### fork benchmark ### (misst execution time)

1. Wir erwarten, dass der Native Host am schnellsten durchläuft, gefolgt vom Docker-Container, da wir auf einem Linux Host System sind und dementsprechend der Linux Kernel direkt genutzt wird (ohne wirklichen Overhead, außer um die Isolation sicherzustellen).
Danach erwarten wir die Virtual Machine mit KVM, da bei der Hardware-unterstützte Virtualisierung die Anzahl der Eingriffe des Hypervisors um syscalls zu handeln entscheidend runtergeht. Am langsamsten läuft also die QEMU Instanz.

Qemu ist erwartunsgemäß um orders of magnitude langsamer. 
Allerdings ist docker ein wenig schneller als Native und KVM ist sogar noch schneller als Docker. Wie sich dies erklären lässt (außer durch verfälschte Messwerte durch ungleiche Auslastung des Systems zu den verschiedenen Ausführungszeiten der Benchmarks) bleibt offen.